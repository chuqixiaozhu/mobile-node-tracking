%!PS-Adobe-2.0 EPSF-2.0
%%Title: 100_f_num_vs_ec.eps
%%Creator: gnuplot 4.6 patchlevel 6
%%CreationDate: Mon Dec 22 20:35:39 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (100_f_num_vs_ec.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 6)
  /Author (piglet)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Dec 22 20:35:39 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
602 448 M
6345 0 V
stroke
LTb
LCb setrgbcolor
602 448 M
63 0 V
6282 0 R
-63 0 V
518 448 M
(0.0) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
602 1080 M
6345 0 V
stroke
LTb
LCb setrgbcolor
602 1080 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
(0.2) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
602 1712 M
6345 0 V
stroke
LTb
LCb setrgbcolor
602 1712 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
(0.4) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
602 2344 M
6345 0 V
stroke
LTb
LCb setrgbcolor
602 2344 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
(0.6) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
602 2975 M
6345 0 V
stroke
LTb
LCb setrgbcolor
602 2975 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
(0.8) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
602 3607 M
6345 0 V
stroke
LTb
LCb setrgbcolor
602 3607 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
(1.0) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
602 4239 M
6345 0 V
stroke
LTb
LCb setrgbcolor
602 4239 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
(1.2) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
602 4871 M
6345 0 V
stroke
LTb
LCb setrgbcolor
602 4871 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
(1.4) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
602 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
602 448 M
0 63 V
0 4360 R
0 -63 V
602 308 M
( 50) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1025 448 M
0 3831 V
0 560 R
0 32 V
stroke
LTb
LCb setrgbcolor
1025 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 60) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1448 448 M
0 3831 V
0 560 R
0 32 V
stroke
LTb
LCb setrgbcolor
1448 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 70) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1871 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
1871 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 80) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
2294 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
2294 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 90) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
2717 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
2717 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 100) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
3140 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
3140 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 110) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
3563 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
3563 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 120) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
3986 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
3986 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 130) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
4409 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
4409 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 140) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
4832 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
4832 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 150) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
5255 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
5255 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 160) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
5678 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
5678 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 170) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
6101 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
6101 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 180) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
6524 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
6524 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 190) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
6947 448 M
0 4423 V
stroke
LTb
LCb setrgbcolor
6947 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 200) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
602 4871 N
602 448 L
6345 0 V
0 4423 V
-6345 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 M
(Energy Consumption \(J\)) Cshow
grestore
LTb
LCb setrgbcolor
3774 98 M
(Number of Fixed Nodes) Cshow
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
644 4279 N
0 560 V
819 0 V
0 -560 V
-819 0 V
Z stroke
% Begin plot #1
2.000 UP
2.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
644 4769 M
(MT) Lshow
LT0
980 4769 M
399 0 V
602 1051 M
423 22 V
423 29 V
423 72 V
423 -97 V
423 86 V
423 38 V
423 68 V
423 -114 V
423 133 V
423 -166 V
423 -4 V
423 -83 V
423 -3 V
423 94 V
423 -30 V
602 1051 BoxF
1025 1073 BoxF
1448 1102 BoxF
1871 1174 BoxF
2294 1077 BoxF
2717 1163 BoxF
3140 1201 BoxF
3563 1269 BoxF
3986 1155 BoxF
4409 1288 BoxF
4832 1122 BoxF
5255 1118 BoxF
5678 1035 BoxF
6101 1032 BoxF
6524 1126 BoxF
6947 1096 BoxF
1179 4769 BoxF
% End plot #1
% Begin plot #2
2.000 UP
2.000 UL
LT1
LC1 setrgbcolor
LCb setrgbcolor
644 4629 M
(FT) Lshow
LT1
980 4629 M
399 0 V
602 1331 M
423 83 V
423 57 V
423 61 V
423 50 V
423 123 V
423 -54 V
423 -113 V
423 52 V
423 35 V
423 -1 V
423 6 V
423 -174 V
423 53 V
423 -71 V
423 161 V
602 1331 Crs
1025 1414 Crs
1448 1471 Crs
1871 1532 Crs
2294 1582 Crs
2717 1705 Crs
3140 1651 Crs
3563 1538 Crs
3986 1590 Crs
4409 1625 Crs
4832 1624 Crs
5255 1630 Crs
5678 1456 Crs
6101 1509 Crs
6524 1438 Crs
6947 1599 Crs
1179 4629 Crs
% End plot #2
% Begin plot #3
2.000 UP
2.000 UL
LT2
LC2 setrgbcolor
LCb setrgbcolor
644 4489 M
(MFT) Lshow
LT2
980 4489 M
399 0 V
602 1307 M
423 145 V
423 75 V
423 89 V
423 -106 V
423 -33 V
423 86 V
423 47 V
423 -103 V
423 102 V
423 -88 V
423 -73 V
423 -4 V
423 -55 V
423 120 V
423 -173 V
602 1307 Star
1025 1452 Star
1448 1527 Star
1871 1616 Star
2294 1510 Star
2717 1477 Star
3140 1563 Star
3563 1610 Star
3986 1507 Star
4409 1609 Star
4832 1521 Star
5255 1448 Star
5678 1444 Star
6101 1389 Star
6524 1509 Star
6947 1336 Star
1179 4489 Star
% End plot #3
% Begin plot #4
2.000 UP
2.000 UL
LT3
LC3 setrgbcolor
LCb setrgbcolor
644 4349 M
(CT) Lshow
LT3
980 4349 M
399 0 V
602 1517 M
423 219 V
423 137 V
423 322 V
423 295 V
423 22 V
423 438 V
423 136 V
423 617 V
423 -314 V
423 139 V
423 431 V
423 197 V
423 614 V
423 -22 V
423 -5 V
602 1517 Box
1025 1736 Box
1448 1873 Box
1871 2195 Box
2294 2490 Box
2717 2512 Box
3140 2950 Box
3563 3086 Box
3986 3703 Box
4409 3389 Box
4832 3528 Box
5255 3959 Box
5678 4156 Box
6101 4770 Box
6524 4748 Box
6947 4743 Box
1179 4349 Box
% End plot #4
1.000 UL
LTb
LCb setrgbcolor
602 4871 N
602 448 L
6345 0 V
0 4423 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
